#!/usr/bin/env bash

set -euxo pipefail

os=$OS
bin=musd
src=`pwd`   # Could use `GITHUB_WORKSPACE` env instead
target=$TARGET
dist=$src/dist
version=`git tag --list --sort=version:refname 'v*' | tail -1`

echo "Packaging $bin $version for $target in $src..."

test -f Cargo.lock || cargo generate-lockfile

echo "Building $bin..."

# Fix OpenSSL not found on Ubuntu
if [[ "ubuntu-latest" = $os ]]; then
  # musl-tools to fix 'Failed to find tool. Is `musl-gcc` installed?'
  sudo apt install musl-tools -y;

  cd /usr/share
  wget https://www.openssl.org/source/openssl-1.1.1o.tar.gz
  tar xzf openssl-1.1.1o.tar.gz && cd openssl-1.1.1o

  if [[ "aarch64-unknown-linux-gnu" = $target ]]; then
    sudo apt-get install gcc-aarch64-linux-gnu -y
    ./config shared no-asm no-async --cross-compile-prefix=aarch64-linux-gnu- 1>/dev/null
    # Remove `-m64` string in Makefile
    sed '/-m64/d' Makefile > Makefile.bk && mv Makefile.bk Makefile
    # This is very important here, Otherwise will cause `error adding symbols: file in wrong format`
    export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
  elif [[ "armv7-unknown-linux-gnueabihf" = $target ]]; then
    sudo apt-get install pkg-config gcc-arm-linux-gnueabihf -y
    ./config shared no-asm no-async --cross-compile-prefix=arm-linux-gnueabihf- 1>/dev/null
    sed '/-m64/d' Makefile > Makefile.bk && mv Makefile.bk Makefile
    export CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc
  else
    ./config shared 1>/dev/null
  fi

  make 1>/dev/null && cd $src
  export OPENSSL_LIB_DIR=/usr/share/openssl-1.1.1o/
  export OPENSSL_INCLUDE_DIR=/usr/share/openssl-1.1.1o/include
  # env
fi

case $os in
  ubuntu-latest | macos-latest)
    cargo rustc --bin $bin --target $target --release
    executable=target/$target/release/$bin
    ;;
  windows-latest)
    cargo rustc --bin $bin --target $target --release
    executable=target/$target/release/$bin.exe
    ;;
esac

echo "Copying release files..."
mkdir dist
cp \
  LICENSE \
  README.md \
  Cargo.lock \
  Cargo.toml \
  $executable \
  CHANGELOG.md \
  README.zh-CN.md \
  $dist

cd $dist
echo "Creating release archive..."
case $os in
  ubuntu-latest | macos-latest)
    archive=$dist/$bin-$version-$target.tar.gz
    tar czf $archive *
    # echo '-------------------------------------------------------'
    # echo `sed '4,/^## \[/!d' ../CHANGELOG.md | sed -e '$ d'`
    # echo '-------------------------------------------------------'
    echo "::set-output name=archive::$archive"
    # echo "::set-output name=changes::`sed '4,/^## \[/!d' ../CHANGELOG.md | sed -e '$ d'`"
    ;;
  windows-latest)
    archive=$dist/$bin-$version-$target.zip
    7z a $archive *
    echo "::set-output name=archive::`pwd -W`/$bin-$version-$target.zip"
    ;;
esac
